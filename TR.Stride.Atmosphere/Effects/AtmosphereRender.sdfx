

params AtmosphereParameters
{
    bool FastSkyEnabled = true;
    bool FastAerialPerspectiveEnabled = true;
    bool RenderSunDisk = true;
    bool MultiScatteringApproximationEnabled = true;
}

effect AtmosphereRenderSkyRayMarchingEffect
{
    using params AtmosphereParameters;

    mixin AtmosphereRenderSkyRayMarching<
        AtmosphereParameters.FastSkyEnabled, 
        AtmosphereParameters.FastAerialPerspectiveEnabled,
        AtmosphereParameters.RenderSunDisk,
        AtmosphereParameters.MultiScatteringApproximationEnabled>;
};

effect AtmosphereRenderTransmittanceLutEffect
{
    using params AtmosphereParameters;

    mixin AtmosphereRenderTransmittanceLut<AtmosphereParameters.MultiScatteringApproximationEnabled>;
};

effect AtmosphereMultipleScatteringTextureEffect
{
    using params AtmosphereParameters;

    mixin AtmosphereMultipleScatteringTextureEffectCS<AtmosphereParameters.MultiScatteringApproximationEnabled>;
};

effect AtmosphereRenderSkyViewLutEffect
{
    using params AtmosphereParameters;

    mixin AtmosphereRenderSkyViewLut<AtmosphereParameters.MultiScatteringApproximationEnabled>;
}

effect AtmosphereRenderScatteringCameraVolumeEffect
{
    using params AtmosphereParameters;

    mixin AtmosphereRenderScatteringCameraVolume<AtmosphereParameters.MultiScatteringApproximationEnabled>;
}